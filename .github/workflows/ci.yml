# This workflow will build and test a Go project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{secrets.POSTGRES_NAME}}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '^1.20.0'

    - name: Create .env file
      run: |
        echo DB_USER=${{ secrets.POSTGRES_USER }} >> .env
        echo DB_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
        echo DB_NAME=${{ secrets.POSTGRES_NAME }} >> .env

    - name: Test
      env:
        DB_USER: ${{ secrets.POSTGRES_USER }}
        DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        DB_NAME: ${{ secrets.POSTGRES_NAME }}
      run: make test
